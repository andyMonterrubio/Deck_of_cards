{"ast":null,"code":"var _jsxFileName = \"/Users/andreahernandez/Documents/GitHub/Deck_of_cards/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card\";\n\nclass App extends React.PureComponent {\n  constructor() {\n    super(); //get id \n\n    this.state = {\n      cards: [],\n      id: 0,\n      queenCount: 0,\n      hearts: [],\n      clubs: [],\n      spades: [],\n      diamonds: [],\n      cardCount: 0\n    };\n\n    this.addCard = () => {\n      if (this.state.queenCount < 4) {\n        const cards = this.state.cards.cards;\n        axios.get(\"https://deckofcardsapi.com/api/deck/\" + this.state.id + \"/draw/?count=1\").then(response => {\n          let code;\n          /* CHANGE TO SWITCH */\n\n          if (response.data.cards[0].value == \"QUEEN\") {\n            code = 12;\n          } else if (response.data.cards[0].value == \"JACK\") {\n            code = 11;\n          } else if (response.data.cards[0].value == \"KING\") {\n            code = 13;\n          } else if (response.data.cards[0].value == \"ACE\") {\n            code = 14;\n          } else {\n            code = response.data.cards[0].value;\n          }\n\n          if (response.data.cards[0].suit == \"HEARTS\") {\n            this.setState(state => ({\n              hearts: [...state.hearts, parseInt(code)]\n            })); //hearts.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"CLUBS\") {\n            this.setState(state => ({\n              clubs: [...state.clubs, parseInt(code)]\n            })); //clubs.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"SPADES\") {\n            this.setState(state => ({\n              spades: [...state.spades, parseInt(code)]\n            })); //spades.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"DIAMONDS\") {\n            this.setState(state => ({\n              diamonds: [...state.diamonds, parseInt(code)]\n            })); //diamonds.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].value == \"QUEEN\") {\n            this.setState(state => ({\n              queenCount: state.queenCount + 1\n            })); //queenCount++;\n\n            let counter = document.getElementById(\"counter\");\n            counter.innerHTML = this.state.queenCount;\n          }\n\n          const newCard = {\n            name: response.data.cards[0].image\n          };\n          const newcards = [...cards, newCard];\n          this.setState({\n            cards: newcards\n          });\n        }).catch(err => console.log(err));\n      } else {\n        clearInterval(this.interval);\n        let hearts = this.state.hearts.sort(this.sortNumber);\n        let diamonds = this.state.diamonds.sort(this.sortNumber);\n        let spades = this.state.spades.sort(this.sortNumber);\n        let clubs = this.state.clubs.sort(this.sortNumber);\n        document.getElementById(\"load-a\").style.display = \"block\";\n        setTimeout(() => {\n          this.sortCard(hearts, diamonds, spades, clubs);\n          window.scrollTo(0, 0);\n        }, 1000);\n      }\n    };\n\n    this.sortCard = (hearts, diamonds, spades, clubs) => {\n      let allCards = document.getElementsByClassName(\"card\");\n\n      for (let j = 0; j < hearts.length; j++) {\n        if (hearts[j] == \"14\") {\n          hearts[j] = \"A\";\n        } else if (hearts[j] === \"13\") {\n          hearts[j] = \"K\";\n        } else if (hearts[j] === \"12\") {\n          hearts[j] = \"Q\";\n        } else if (hearts[j] === \"11\") {\n          hearts[j] = \"J\";\n        } else if (hearts[j] === \"10\") {\n          hearts[j] = \"0\";\n        }\n\n        allCards[j].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + hearts[j] + \"H.png' />\";\n        this.setState(state => ({\n          cardCount: state.cardCount + 1\n        }));\n      }\n\n      for (let k = 0; k < clubs.length; k++) {\n        if (clubs[k] == \"14\") {\n          clubs[k] = \"A\";\n        } else if (clubs[k] === \"13\") {\n          clubs[k] = \"K\";\n        } else if (clubs[k] === \"12\") {\n          clubs[k] = \"Q\";\n        } else if (clubs[k] === \"11\") {\n          clubs[k] = \"J\";\n        } else if (clubs[k] === \"10\") {\n          clubs[k] = \"0\";\n        }\n\n        allCards[this.state.cardCount].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + clubs[k] + \"C.png' />\";\n        this.setState(state => ({\n          cardCount: state.cardCount + 1\n        }));\n      }\n\n      for (let y = 0; y < diamonds.length; y++) {\n        if (diamonds[y] == \"14\") {\n          diamonds[y] = \"A\";\n        } else if (diamonds[y] === \"13\") {\n          diamonds[y] = \"K\";\n        } else if (diamonds[y] === \"12\") {\n          diamonds[y] = \"Q\";\n        } else if (diamonds[y] === \"11\") {\n          diamonds[y] = \"J\";\n        } else if (diamonds[y] === \"10\") {\n          diamonds[y] = \"0\";\n        }\n\n        allCards[this.state.cardCount].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + diamonds[y] + \"D.png' />\";\n        this.setState(state => ({\n          cardCount: state.cardCount + 1\n        }));\n      }\n\n      for (let a = 0; a < spades.length; a++) {\n        if (spades[a] == \"14\") {\n          spades[a] = \"A\";\n        } else if (spades[a] === \"13\") {\n          spades[a] = \"K\";\n        } else if (spades[a] === \"12\") {\n          spades[a] = \"Q\";\n        } else if (spades[a] === \"11\") {\n          spades[a] = \"J\";\n        } else if (spades[a] === \"10\") {\n          spades[a] = \"0\";\n        }\n\n        allCards[this.state.cardCount].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + spades[a] + \"S.png' />\";\n        this.setState(state => ({\n          cardCount: state.cardCount + 1\n        }));\n      }\n    };\n\n    axios.get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\").then(res => {\n      console.log(res);\n      this.setState({\n        id: res.data.deck_id\n      });\n    }).catch(err => console.log(err)); //*******************************/\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.addCard(window.scrollTo(0, document.body.scrollHeight)), 1000);\n  }\n\n  sortNumber(a, b) {\n    return a - b;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 7\n      }\n    }, this.state.cards.map((t, i) => /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      name: t.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andreahernandez/Documents/GitHub/Deck_of_cards/src/App.js"],"names":["React","axios","Card","App","PureComponent","constructor","state","cards","id","queenCount","hearts","clubs","spades","diamonds","cardCount","addCard","get","then","response","code","data","value","suit","setState","parseInt","counter","document","getElementById","innerHTML","newCard","name","image","newcards","catch","err","console","log","clearInterval","interval","sort","sortNumber","style","display","setTimeout","sortCard","window","scrollTo","allCards","getElementsByClassName","j","length","k","y","a","res","deck_id","componentDidMount","setInterval","body","scrollHeight","b","render","map","t","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card\"\n\nclass App extends React.PureComponent {\n  state = {\n    cards: [], \n    id: 0, \n    queenCount: 0, \n    hearts: [],\n    clubs: [],\n    spades: [],\n    diamonds: [],\n    cardCount: 0\n  };\n\n  constructor() {\n    super();\n\n    //get id \n    axios\n      .get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\")\n      .then(res => {\n        console.log(res)\n        this.setState({ id: res.data.deck_id })\n      })\n      .catch(err => console.log(err));\n    //*******************************/\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.addCard(window.scrollTo(0, document.body.scrollHeight)),\n      1000\n    );\n  }\n\n  addCard = () => {\n    if (this.state.queenCount < 4) {\n      const { cards } = this.state.cards;\n\n      axios\n        .get(\"https://deckofcardsapi.com/api/deck/\" + this.state.id + \"/draw/?count=1\")\n        .then(response => {\n          let code;\n          /* CHANGE TO SWITCH */\n          if (response.data.cards[0].value == \"QUEEN\") {\n            code = 12;\n          } else if (response.data.cards[0].value == \"JACK\") {\n            code = 11;\n          } else if (response.data.cards[0].value == \"KING\") {\n            code = 13;\n          } else if (response.data.cards[0].value == \"ACE\") {\n            code = 14;\n          } else {\n            code = response.data.cards[0].value;\n          }\n\n          \n          if (response.data.cards[0].suit == \"HEARTS\") {\n            this.setState(state => ({\n              hearts: [...state.hearts, parseInt(code)]\n            }));\n            //hearts.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"CLUBS\") {\n            this.setState(state => ({\n              clubs: [...state.clubs, parseInt(code)]\n            }));\n            //clubs.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"SPADES\") {\n            this.setState(state => ({\n              spades: [...state.spades, parseInt(code)]\n            }));\n            //spades.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"DIAMONDS\") {\n            this.setState(state => ({\n              diamonds: [...state.diamonds, parseInt(code)]\n            }));\n            //diamonds.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].value == \"QUEEN\") {\n            this.setState((state) => ({\n              queenCount: state.queenCount + 1\n            }));\n            //queenCount++;\n            let counter = document.getElementById(\"counter\");\n            counter.innerHTML = this.state.queenCount;\n          }\n\n          const newCard = { name: response.data.cards[0].image };\n          const newcards = [...cards, newCard];\n          this.setState({ cards: newcards });\n        })\n        .catch(err => console.log(err));\n    } else {\n      clearInterval(this.interval);\n      let hearts = this.state.hearts.sort(this.sortNumber);\n      let diamonds = this.state.diamonds.sort(this.sortNumber);\n      let spades = this.state.spades.sort(this.sortNumber);\n      let clubs = this.state.clubs.sort(this.sortNumber);\n\n      document.getElementById(\"load-a\").style.display = \"block\";\n      setTimeout(() => {\n        this.sortCard(hearts, diamonds, spades, clubs);\n        window.scrollTo(0, 0);\n      }, 1000);\n    }\n  };\n\n  sortCard = (hearts, diamonds, spades, clubs) => {\n    let allCards = document.getElementsByClassName(\"card\");\n\n    for (let j = 0; j < hearts.length; j++) {\n      if (hearts[j] == \"14\") {\n        hearts[j] = \"A\";\n      } else if (hearts[j] === \"13\") {\n        hearts[j] = \"K\";\n      } else if (hearts[j] === \"12\") {\n        hearts[j] = \"Q\";\n      } else if (hearts[j] === \"11\") {\n        hearts[j] = \"J\";\n      } else if (hearts[j] === \"10\") {\n        hearts[j] = \"0\";\n      }\n\n      allCards[j].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + hearts[j] + \"H.png' />\";\n      this.setState((state) => ({\n        cardCount: state.cardCount + 1\n      }));\n    }\n\n    for (let k = 0; k < clubs.length; k++) {\n      if (clubs[k] == \"14\") {\n        clubs[k] = \"A\";\n      } else if (clubs[k] === \"13\") {\n        clubs[k] = \"K\";\n      } else if (clubs[k] === \"12\") {\n        clubs[k] = \"Q\";\n      } else if (clubs[k] === \"11\") {\n        clubs[k] = \"J\";\n      } else if (clubs[k] === \"10\") {\n        clubs[k] = \"0\";\n      }\n\n      allCards[this.state.cardCount].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + clubs[k] + \"C.png' />\";\n      this.setState((state) => ({\n        cardCount: state.cardCount + 1\n      }));\n    }\n\n    for (let y = 0; y < diamonds.length; y++) {\n      if (diamonds[y] == \"14\") {\n        diamonds[y] = \"A\";\n      } else if (diamonds[y] === \"13\") {\n        diamonds[y] = \"K\";\n      } else if (diamonds[y] === \"12\") {\n        diamonds[y] = \"Q\";\n      } else if (diamonds[y] === \"11\") {\n        diamonds[y] = \"J\";\n      } else if (diamonds[y] === \"10\") {\n        diamonds[y] = \"0\";\n      }\n\n      allCards[this.state.cardCount].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + diamonds[y] + \"D.png' />\";\n\n      this.setState((state) => ({\n        cardCount: state.cardCount + 1\n      }));\n    }\n\n    for (let a = 0; a < spades.length; a++) {\n      if (spades[a] == \"14\") {\n        spades[a] = \"A\";\n      } else if (spades[a] === \"13\") {\n        spades[a] = \"K\";\n      } else if (spades[a] === \"12\") {\n        spades[a] = \"Q\";\n      } else if (spades[a] === \"11\") {\n        spades[a] = \"J\";\n      } else if (spades[a] === \"10\") {\n        spades[a] = \"0\";\n      }\n\n      allCards[this.state.cardCount].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + spades[a] + \"S.png' />\";\n    \n      this.setState((state) => ({\n        cardCount: state.cardCount + 1\n      }));\n    }\n  }\n\n  sortNumber(a, b) {\n    return a - b;\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.cards.map((t, i) => (\n          <Card key={i} name={t.name} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}