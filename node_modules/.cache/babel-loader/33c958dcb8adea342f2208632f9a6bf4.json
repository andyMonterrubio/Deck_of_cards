{"ast":null,"code":"var _jsxFileName = \"/Users/andreahernandez/Documents/GitHub/Deck_of_cards/src/App.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card\";\nvar id;\nvar queenCount = 0;\nvar hearts = [];\nvar clubs = [];\nvar spades = [];\nvar diamonds = [];\nvar cardCount = 0;\n\nclass App extends React.PureComponent {\n  constructor() {\n    super(); //obtengo id\n\n    this.state = {\n      cards: []\n    };\n\n    this.addCard = () => {\n      if (queenCount < 4) {\n        const cards = this.state.cards;\n        axios.get(\"https://deckofcardsapi.com/api/deck/\" + id + \"/draw/?count=1\").then(response => {\n          var code;\n\n          if (response.data.cards[0].value == \"QUEEN\") {\n            code = 12;\n          } else if (response.data.cards[0].value == \"JACK\") {\n            code = 11;\n          } else if (response.data.cards[0].value == \"KING\") {\n            code = 13;\n          } else if (response.data.cards[0].value == \"ACE\") {\n            code = 14;\n          } else {\n            code = response.data.cards[0].value;\n          }\n\n          if (response.data.cards[0].suit == \"HEARTS\") {\n            hearts.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"CLUBS\") {\n            clubs.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"SPADES\") {\n            spades.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"DIAMONDS\") {\n            diamonds.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].value == \"QUEEN\") {\n            queenCount++;\n            var counter = document.getElementById(\"counter\");\n            counter.innerHTML = queenCount;\n          }\n\n          const newCard = {\n            name: response.data.cards[0].image\n          };\n          const newcards = [...cards, newCard];\n          this.setState({\n            cards: newcards\n          });\n        }).catch(err => console.log(err));\n      } else {\n        clearInterval(this.interval);\n        hearts = hearts.sort(this.sortNumber);\n        diamonds = diamonds.sort(this.sortNumber);\n        spades = spades.sort(this.sortNumber);\n        clubs = clubs.sort(this.sortNumber);\n        document.getElementById(\"load-a\").style.display = \"block\";\n        setTimeout(() => {\n          this.sortCard(hearts, diamonds, spades, clubs);\n          window.scrollTo(0, 0);\n        }, 1000);\n      }\n    };\n\n    axios.get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\").then(res => {\n      id = res.data.deck_id;\n    }).catch(err => console.log(err)); //*******************************/\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => this.addCard(window.scrollTo(0, document.body.scrollHeight)), 1000);\n  }\n\n  sortCard(hearts, diamonds, spades, clubs) {\n    var allCards = document.getElementsByClassName(\"card\");\n\n    for (let j = 0; j < hearts.length; j++) {\n      if (hearts[j] == \"14\") {\n        hearts[j] = \"A\";\n      } else if (hearts[j] == \"13\") {\n        hearts[j] = \"K\";\n      } else if (hearts[j] == \"12\") {\n        hearts[j] = \"Q\";\n      } else if (hearts[j] == \"11\") {\n        hearts[j] = \"J\";\n      } else if (hearts[j] == \"10\") {\n        hearts[j] = \"0\";\n      }\n\n      allCards[j].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + hearts[j] + \"H.png' />\";\n      cardCount++;\n    }\n\n    for (let k = 0; k < clubs.length; k++) {\n      if (clubs[k] == \"14\") {\n        clubs[k] = \"A\";\n      } else if (clubs[k] == \"13\") {\n        clubs[k] = \"K\";\n      } else if (clubs[k] == \"12\") {\n        clubs[k] = \"Q\";\n      } else if (clubs[k] == \"11\") {\n        clubs[k] = \"J\";\n      } else if (clubs[k] == \"10\") {\n        clubs[k] = \"0\";\n      }\n\n      allCards[cardCount].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + clubs[k] + \"C.png' />\";\n      cardCount++;\n    }\n\n    for (let y = 0; y < diamonds.length; y++) {\n      if (diamonds[y] == \"14\") {\n        diamonds[y] = \"A\";\n      } else if (diamonds[y] == \"13\") {\n        diamonds[y] = \"K\";\n      } else if (diamonds[y] == \"12\") {\n        diamonds[y] = \"Q\";\n      } else if (diamonds[y] == \"11\") {\n        diamonds[y] = \"J\";\n      } else if (diamonds[y] == \"10\") {\n        diamonds[y] = \"0\";\n      }\n\n      allCards[cardCount].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + diamonds[y] + \"D.png' />\";\n      cardCount++;\n    }\n\n    for (let a = 0; a < spades.length; a++) {\n      if (spades[a] == \"14\") {\n        spades[a] = \"A\";\n      } else if (spades[a] == \"13\") {\n        spades[a] = \"K\";\n      } else if (spades[a] == \"12\") {\n        spades[a] = \"Q\";\n      } else if (spades[a] == \"11\") {\n        spades[a] = \"J\";\n      } else if (spades[a] == \"10\") {\n        spades[a] = \"0\";\n      }\n\n      allCards[cardCount].innerHTML = \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" + spades[a] + \"S.png' />\";\n      cardCount++;\n    }\n  }\n\n  sortNumber(a, b) {\n    return a - b;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    }, this.state.cards.map((t, i) => /*#__PURE__*/React.createElement(Card, {\n      key: i,\n      name: t.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/andreahernandez/Documents/GitHub/Deck_of_cards/src/App.js"],"names":["React","axios","Card","id","queenCount","hearts","clubs","spades","diamonds","cardCount","App","PureComponent","constructor","state","cards","addCard","get","then","response","code","data","value","suit","push","parseInt","counter","document","getElementById","innerHTML","newCard","name","image","newcards","setState","catch","err","console","log","clearInterval","interval","sort","sortNumber","style","display","setTimeout","sortCard","window","scrollTo","res","deck_id","componentDidMount","setInterval","body","scrollHeight","allCards","getElementsByClassName","j","length","k","y","a","b","render","map","t","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport Card from \"./components/Card\"\n\nvar id;\nvar queenCount = 0;\nvar hearts = [];\nvar clubs = [];\nvar spades = [];\nvar diamonds = [];\nvar cardCount = 0;\n\nclass App extends React.PureComponent {\n  state = {\n    cards: []\n  };\n\n  constructor() {\n    super();\n\n    //obtengo id\n    axios\n      .get(\"https://deckofcardsapi.com/api/deck/new/shuffle/?deck_count=1\")\n      .then(res => {\n        id = res.data.deck_id;\n      })\n      .catch(err => console.log(err));\n    //*******************************/\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.addCard(window.scrollTo(0, document.body.scrollHeight)),\n      1000\n    );\n  }\n\n  addCard = () => {\n    if (queenCount < 4) {\n      const { cards } = this.state;\n\n      axios\n        .get(\"https://deckofcardsapi.com/api/deck/\" + id + \"/draw/?count=1\")\n        .then(response => {\n          var code;\n          if (response.data.cards[0].value == \"QUEEN\") {\n            code = 12;\n          } else if (response.data.cards[0].value == \"JACK\") {\n            code = 11;\n          } else if (response.data.cards[0].value == \"KING\") {\n            code = 13;\n          } else if (response.data.cards[0].value == \"ACE\") {\n            code = 14;\n          } else {\n            code = response.data.cards[0].value;\n          }\n\n          if (response.data.cards[0].suit == \"HEARTS\") {\n            hearts.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"CLUBS\") {\n            clubs.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"SPADES\") {\n            spades.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].suit == \"DIAMONDS\") {\n            diamonds.push(parseInt(code));\n          }\n\n          if (response.data.cards[0].value == \"QUEEN\") {\n            queenCount++;\n            var counter = document.getElementById(\"counter\");\n            counter.innerHTML = queenCount;\n          }\n\n          const newCard = { name: response.data.cards[0].image };\n          const newcards = [...cards, newCard];\n          this.setState({ cards: newcards });\n        })\n        .catch(err => console.log(err));\n    } else {\n      clearInterval(this.interval);\n      hearts = hearts.sort(this.sortNumber);\n      diamonds = diamonds.sort(this.sortNumber);\n      spades = spades.sort(this.sortNumber);\n      clubs = clubs.sort(this.sortNumber);\n\n      document.getElementById(\"load-a\").style.display = \"block\";\n      setTimeout(() => {\n        this.sortCard(hearts, diamonds, spades, clubs);\n        window.scrollTo(0, 0);\n      }, 1000);\n    }\n  };\n\n  sortCard(hearts, diamonds, spades, clubs) {\n    var allCards = document.getElementsByClassName(\"card\");\n\n    for (let j = 0; j < hearts.length; j++) {\n      if (hearts[j] == \"14\") {\n        hearts[j] = \"A\";\n      } else if (hearts[j] == \"13\") {\n        hearts[j] = \"K\";\n      } else if (hearts[j] == \"12\") {\n        hearts[j] = \"Q\";\n      } else if (hearts[j] == \"11\") {\n        hearts[j] = \"J\";\n      } else if (hearts[j] == \"10\") {\n        hearts[j] = \"0\";\n      }\n\n      allCards[j].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" +\n        hearts[j] +\n        \"H.png' />\";\n      cardCount++;\n    }\n\n    for (let k = 0; k < clubs.length; k++) {\n      if (clubs[k] == \"14\") {\n        clubs[k] = \"A\";\n      } else if (clubs[k] == \"13\") {\n        clubs[k] = \"K\";\n      } else if (clubs[k] == \"12\") {\n        clubs[k] = \"Q\";\n      } else if (clubs[k] == \"11\") {\n        clubs[k] = \"J\";\n      } else if (clubs[k] == \"10\") {\n        clubs[k] = \"0\";\n      }\n\n      allCards[cardCount].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" +\n        clubs[k] +\n        \"C.png' />\";\n      cardCount++;\n    }\n\n    for (let y = 0; y < diamonds.length; y++) {\n      if (diamonds[y] == \"14\") {\n        diamonds[y] = \"A\";\n      } else if (diamonds[y] == \"13\") {\n        diamonds[y] = \"K\";\n      } else if (diamonds[y] == \"12\") {\n        diamonds[y] = \"Q\";\n      } else if (diamonds[y] == \"11\") {\n        diamonds[y] = \"J\";\n      } else if (diamonds[y] == \"10\") {\n        diamonds[y] = \"0\";\n      }\n\n      allCards[cardCount].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" +\n        diamonds[y] +\n        \"D.png' />\";\n      cardCount++;\n    }\n\n    for (let a = 0; a < spades.length; a++) {\n      if (spades[a] == \"14\") {\n        spades[a] = \"A\";\n      } else if (spades[a] == \"13\") {\n        spades[a] = \"K\";\n      } else if (spades[a] == \"12\") {\n        spades[a] = \"Q\";\n      } else if (spades[a] == \"11\") {\n        spades[a] = \"J\";\n      } else if (spades[a] == \"10\") {\n        spades[a] = \"0\";\n      }\n\n      allCards[cardCount].innerHTML =\n        \"<img class='done hearts' src='https://deckofcardsapi.com/static/img/\" +\n        spades[a] +\n        \"S.png' />\";\n      cardCount++;\n    }\n  }\n\n  sortNumber(a, b) {\n    return a - b;\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.cards.map((t, i) => (\n          <Card key={i} name={t.name} />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}